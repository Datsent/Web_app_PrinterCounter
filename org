import tkinter as tk
import sqlite3
from tkinter import ttk

class App(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title('Table with Inputs and SQLite')
        self.geometry('400x300')

        # Create input labels and fields
        name_label = ttk.Label(self, text='Name:')
        name_input = ttk.Entry(self)
        age_label = ttk.Label(self, text='Age:')
        age_input = ttk.Entry(self)
        submit_button = ttk.Button(self, text='Submit', command=lambda: self.add_to_table(name_input.get(), age_input.get()))

        # Create layout for input fields and button
        input_layout = ttk.Frame(self)
        name_label.grid(row=0, column=0, padx=5, pady=5)
        name_input.grid(row=0, column=1, padx=5, pady=5)
        age_label.grid(row=1, column=0, padx=5, pady=5)
        age_input.grid(row=1, column=1, padx=5, pady=5)
        submit_button.grid(row=2, column=1, padx=5, pady=5)

        # Create table
        self.table = ttk.Treeview(self)
        self.table['columns'] = ('Name', 'Age')
        self.table.heading('#0', text='ID')
        self.table.column('#0', width=50)
        self.table.heading('Name', text='Name')
        self.table.column('Name', width=100)
        self.table.heading('Age', text='Age')
        self.table.column('Age', width=50)

        # Create layout for table and input fields/button
        main_layout = ttk.Frame(self)
        self.table.grid(row=0, column=0, padx=5, pady=5)
        input_layout.grid(row=1, column=0, padx=5, pady=5)
        main_layout.grid(row=0, column=1, padx=5, pady=5)

        # Connect to database
        self.conn = sqlite3.connect('example.db')
        self.cursor = self.conn.cursor()

        # Create table in database if it doesn't exist
        self.cursor.execute('CREATE TABLE IF NOT EXISTS people (id INTEGER PRIMARY KEY, name TEXT, age INTEGER)')

        # Populate table with data from database
        self.cursor.execute('SELECT * FROM people')
        rows = self.cursor.fetchall()
        for row in rows:
            self.table.insert('', 'end', text=row[0], values=(row[1], row[2]))

    def add_to_table(self, name, age):
        # Add data to database
        self.cursor.execute('INSERT INTO people (name, age) VALUES (?, ?)', (name, age))
        self.conn.commit()

        # Add data to table
        row_id = self.cursor.lastrowid
        self.table.insert('', 'end', text=row_id, values=(name, age))

if __name__ == '__main__':
    app = App()
    app.mainloop()
